name: puzzle-server-pipeline

defaults:
  run:
    working-directory: puzzle-server

on:
  push:
    paths:
      - puzzle-server/**
      - .github/workflows/puzzle-server-pipeline.yml

jobs:
  parse-version:
    name: parse-version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.parse.outputs.version }}
      tag-name: ${{ steps.parse.outputs.tag-name }}
      package-name: ${{ steps.parse.outputs.package-name }}
      full-package-name: ${{ steps.parse.outputs.full-package-name }}
    steps:
      - uses: actions/checkout@v2
      - name: Parse version info
        run: |
          NAME=$(cat package.json | jq .name --raw-output)
          VERSION=$(cat package.json | jq .version --raw-output)
          COMMIT_ID=${GITHUB_SHA:0:7}
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag-name::$NAME/$VERSION"
          echo "::set-output name=package-name::$NAME:$VERSION"
          echo "::set-output name=full-package-name::$NAME:$VERSION-$COMMIT_ID"

  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go
      - uses: actions/checkout@v2
      - name: Get dependencies
        run: go mod download
      - name: Check code style
        run: go vet ./...
      - name: Run security scan
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.8.1
          $(go env GOPATH)/bin/gosec ./...
      - name: Test
        run: go test ./...

  scan-dependencies:
    name: scan-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"

  scan-dockerfile:
    name: scan-dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Scan dockerfile using hadolint
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile

  build-image:
    name: build-image
    if: github.ref == 'refs/heads/main'
    needs:
      - parse-version
      - run-tests
      - scan-dependencies
      - scan-dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Docker build
        run: |
          echo "Package version: ${{needs.parse-version.outputs.full-package-name}}"
          export IMAGE_NAME="ghcr.io/czarsimon/tactics-trainer/${{needs.parse-version.outputs.package-name}}"
          docker build -t $IMAGE_NAME .
      - name: Run Trivy vulnerability scanner on image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          image-ref: "$IMAGE_NAME"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
      - name: Docker push
        run: |
          docker login https://ghcr.io --username $GITHUB_ACTOR --password ${{ secrets.GITHUB_TOKEN }}
          docker push $IMAGE_NAME
